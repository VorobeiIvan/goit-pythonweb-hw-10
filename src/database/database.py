import os
import logging
from sqlalchemy import create_engine
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker
from dotenv import load_dotenv

"""
–ú–æ–¥—É–ª—å –¥–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é SQLAlchemy.

–¶–µ–π –º–æ–¥—É–ª—å –≤–∏–∫–æ–Ω—É—î —Ç–∞–∫—ñ —Ñ—É–Ω–∫—Ü—ñ—ó:
1. –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –∑ —Ñ–∞–π–ª—É `.env`.
2. –û—Ç—Ä–∏–º—É—î URL –±–∞–∑–∏ –¥–∞–Ω–∏—Ö —ñ–∑ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ (–∑–º—ñ–Ω–Ω–∞ `DATABASE_URL`).
3. –°—Ç–≤–æ—Ä—é—î –¥–≤–∏–≥—É–Ω –±–∞–∑–∏ –¥–∞–Ω–∏—Ö (`engine`) –∑ –æ–±—Ä–æ–±–∫–æ—é –ø–æ–º–∏–ª–æ–∫ –ø—ñ–¥ —á–∞—Å –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è.
4. –ù–∞–ª–∞—à—Ç–æ–≤—É—î —Ñ–∞–±—Ä–∏–∫—É —Å–µ—Å—ñ–π (`SessionLocal`) –¥–ª—è –≤–∑–∞—î–º–æ–¥—ñ—ó –∑ –±–∞–∑–æ—é –¥–∞–Ω–∏—Ö.
5. –í–∏–∑–Ω–∞—á–∞—î –±–∞–∑–æ–≤–∏–π –∫–ª–∞—Å (`Base`) –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–æ–¥–µ–ª–µ–π –±–∞–∑–∏ –¥–∞–Ω–∏—Ö.
6. –õ–æ–≥—É—î —É—Å–ø—ñ—à–Ω—ñ —Ç–∞ –ø–æ–º–∏–ª–∫–æ–≤—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó –¥–ª—è –∫—Ä–∞—â–æ–≥–æ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É.
7. –î–æ–¥–∞—î —Ñ—É–Ω–∫—Ü—ñ—é `create_engine_from_url`, —â–æ –¥–æ–∑–≤–æ–ª—è—î —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –¥–≤–∏–≥—É–Ω–∏ –∑ —Ä—ñ–∑–Ω–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏.
8. –ú—ñ—Å—Ç–∏—Ç—å –æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—å —É –±–∞–∑—ñ (–¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞).

–ó–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ:
- `os` ‚Äì –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑—ñ –∑–º—ñ–Ω–Ω–∏–º–∏ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞.
- `logging` ‚Äì –¥–ª—è –≤–µ–¥–µ–Ω–Ω—è –∂—É—Ä–Ω–∞–ª—É.
- `sqlalchemy` ‚Äì –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –±–∞–∑–æ—é –¥–∞–Ω–∏—Ö.
- `dotenv` ‚Äì –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –∑ —Ñ–∞–π–ª—É `.env`.
"""

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –∑ —Ñ–∞–π–ª—É .env
load_dotenv()

# –î–∏–Ω–∞–º—ñ—á–Ω–µ —Ñ–æ—Ä–º—É–≤–∞–Ω–Ω—è DATABASE_URL
DATABASE_URL = (
    f"postgresql://{os.getenv('POSTGRES_USER')}:{os.getenv('POSTGRES_PASSWORD')}"
    f"@{os.getenv('POSTGRES_HOST')}:{os.getenv('POSTGRES_PORT')}/{os.getenv('POSTGRES_DB')}"
)

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –∑–º—ñ–Ω–Ω–æ—ó DATABASE_URL
if not DATABASE_URL:
    logger.error("‚ùå –ó–º—ñ–Ω–Ω–∞ DATABASE_URL –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–∞ —É —Å–µ—Ä–µ–¥–æ–≤–∏—â—ñ!")
    raise ValueError("–ó–º—ñ–Ω–Ω–∞ DATABASE_URL –≤—ñ–¥—Å—É—Ç–Ω—è —É –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞")

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–≤–∏–≥—É–Ω–∞ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö –∑ –æ–±—Ä–æ–±–∫–æ—é –ø–æ–º–∏–ª–æ–∫
try:
    # –ü–∞—Ä–∞–º–µ—Ç—Ä echo=False (–º–æ–∂–Ω–∞ –∑–º—ñ–Ω–∏—Ç–∏ –Ω–∞ True –¥–ª—è –≤—ñ–¥–ª–∞–¥–∫–∏ SQL-–∑–∞–ø–∏—Ç—ñ–≤)
    engine = create_engine(DATABASE_URL, pool_pre_ping=True, echo=False)
    logger.info("‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ.")
except Exception as e:
    logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö: {e}")
    raise RuntimeError(f"–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö: {e}")

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–µ—Å—ñ—ó SQLAlchemy
SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)

# –ë–∞–∑–æ–≤–∏–π –∫–ª–∞—Å –¥–ª—è –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –º–æ–¥–µ–ª–µ–π
Base = declarative_base()

# –û–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—å (–¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞)
# Base.metadata.create_all(bind=engine)


def create_engine_from_url(database_url: str, echo: bool = False):
    """
    –°—Ç–≤–æ—Ä—é—î –¥–≤–∏–≥—É–Ω –±–∞–∑–∏ –¥–∞–Ω–∏—Ö –Ω–∞ –æ—Å–Ω–æ–≤—ñ –Ω–∞–¥–∞–Ω–æ–≥–æ URL.

    :param database_url: URL –¥–ª—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö.
    :param echo: –í—ñ–¥–æ–±—Ä–∞–∂–∞—Ç–∏ SQL-–∑–∞–ø–∏—Ç–∏ —É –ª–æ–≥–∞—Ö (–∫–æ—Ä–∏—Å–Ω–æ –¥–ª—è –≤—ñ–¥–ª–∞–¥–∫–∏).
    :return: –û–±'—î–∫—Ç –¥–≤–∏–≥—É–Ω–∞ SQLAlchemy.
    """
    if not database_url:
        logger.error("‚ùå –ù–∞–¥–∞–Ω–æ –ø—É—Å—Ç–∏–π URL –±–∞–∑–∏ –¥–∞–Ω–∏—Ö.")
        raise ValueError("URL –±–∞–∑–∏ –¥–∞–Ω–∏—Ö –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –ø—É—Å—Ç–∏–º")
    try:
        logger.info(f"üîÑ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–≤–∏–≥—É–Ω–∞ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö (echo={echo})...")
        return create_engine(database_url, pool_pre_ping=True, echo=echo)
    except Exception as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–≤–∏–≥—É–Ω–∞ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö: {e}")
        raise RuntimeError(f"–ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ –¥–≤–∏–≥—É–Ω –±–∞–∑–∏ –¥–∞–Ω–∏—Ö: {e}")
