{"openapi":"3.1.0","info":{"title":"FastAPI","version":"0.1.0"},"paths":{"/auth/token":{"post":{"tags":["Authentication"],"summary":"Login","description":"Authenticate a user and return an access token.\n\nArgs:\n    form_data (OAuth2PasswordRequestForm): The login form data containing username and password.\n    db (Session): The database session dependency.\n\nReturns:\n    Token: The access token and token type.\n\nRaises:\n    HTTPException: If the credentials are invalid or the user is not authenticated.","operationId":"login_auth_token_post","requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/Body_login_auth_token_post"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Token"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/contacts/":{"post":{"tags":["Contacts"],"summary":"Create Contact","description":"Creates a new contact and associates it with the currently authenticated user.\n\nArgs:\n    contact (ContactCreate): The data required to create a new contact.\n    db (Session): The database session dependency.\n    current_user: The currently authenticated user.\n\nReturns:\n    ContactResponse: The newly created contact object.\n\nRaises:\n    HTTPException: If there is an issue with the database operation.","operationId":"create_contact_contacts__post","parameters":[{"name":"token","in":"query","required":true,"schema":{"type":"string","title":"Token"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContactCreate"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContactResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"get":{"tags":["Contacts"],"summary":"Get Contacts","description":"Retrieves all contacts associated with the currently authenticated user.\n\nArgs:\n    db (Session): The database session dependency.\n    current_user: The currently authenticated user.\n\nReturns:\n    List[ContactResponse]: A list of contacts belonging to the user.","operationId":"get_contacts_contacts__get","parameters":[{"name":"token","in":"query","required":true,"schema":{"type":"string","title":"Token"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ContactResponse"},"title":"Response Get Contacts Contacts  Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/contacts/{contact_id}":{"get":{"tags":["Contacts"],"summary":"Get Contact By Id","description":"Retrieves a specific contact by its ID.\n\nArgs:\n    contact_id (int): The ID of the contact to retrieve.\n    db (Session): The database session dependency.\n    current_user: The currently authenticated user.\n\nReturns:\n    ContactResponse: The contact object.\n\nRaises:\n    HTTPException: If the contact is not found or does not belong to the user.","operationId":"get_contact_by_id_contacts__contact_id__get","parameters":[{"name":"contact_id","in":"path","required":true,"schema":{"type":"integer","title":"Contact Id"}},{"name":"token","in":"query","required":true,"schema":{"type":"string","title":"Token"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContactResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"put":{"tags":["Contacts"],"summary":"Update Contact","description":"Updates a specific contact by its ID.\n\nArgs:\n    contact_id (int): The ID of the contact to update.\n    contact_data (ContactCreate): The updated contact data.\n    db (Session): The database session dependency.\n    current_user: The currently authenticated user.\n\nReturns:\n    ContactResponse: The updated contact object.\n\nRaises:\n    HTTPException: If the contact is not found or does not belong to the user.","operationId":"update_contact_contacts__contact_id__put","parameters":[{"name":"contact_id","in":"path","required":true,"schema":{"type":"integer","title":"Contact Id"}},{"name":"token","in":"query","required":true,"schema":{"type":"string","title":"Token"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContactCreate"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContactResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["Contacts"],"summary":"Delete Contact","description":"Deletes a specific contact by its ID.\n\nArgs:\n    contact_id (int): The ID of the contact to delete.\n    db (Session): The database session dependency.\n    current_user: The currently authenticated user.\n\nReturns:\n    ContactResponse: The deleted contact object.\n\nRaises:\n    HTTPException: If the contact is not found or does not belong to the user.","operationId":"delete_contact_contacts__contact_id__delete","parameters":[{"name":"contact_id","in":"path","required":true,"schema":{"type":"integer","title":"Contact Id"}},{"name":"token","in":"query","required":true,"schema":{"type":"string","title":"Token"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContactResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/users/register/":{"post":{"tags":["Users"],"summary":"Register User","description":"Register a new user.\n\nArgs:\n    user (UserCreate): The user data for registration.\n    db (Session): The database session.\n\nReturns:\n    UserResponse: The registered user data.\n\nRaises:\n    HTTPException: If a user with the given email already exists.","operationId":"register_user_users_register__post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserCreate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/users/{user_id}":{"get":{"tags":["Users"],"summary":"Get User By Id","description":"Retrieve a user by their ID.\n\nArgs:\n    user_id (int): The ID of the user to retrieve.\n    db (Session): The database session.\n\nReturns:\n    UserResponse: The user data.\n\nRaises:\n    HTTPException: If the user is not found.","operationId":"get_user_by_id_users__user_id__get","parameters":[{"name":"user_id","in":"path","required":true,"schema":{"type":"integer","title":"User Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"Body_login_auth_token_post":{"properties":{"grant_type":{"anyOf":[{"type":"string","pattern":"^password$"},{"type":"null"}],"title":"Grant Type"},"username":{"type":"string","title":"Username"},"password":{"type":"string","title":"Password"},"scope":{"type":"string","title":"Scope","default":""},"client_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Client Id"},"client_secret":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Client Secret"}},"type":"object","required":["username","password"],"title":"Body_login_auth_token_post"},"ContactCreate":{"properties":{"first_name":{"type":"string","title":"First Name"},"last_name":{"type":"string","title":"Last Name"},"email":{"type":"string","format":"email","title":"Email"},"phone":{"type":"string","title":"Phone"},"birthday":{"type":"string","title":"Birthday"},"additional_info":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Additional Info"}},"type":"object","required":["first_name","last_name","email","phone","birthday"],"title":"ContactCreate","description":"ContactCreate is a Pydantic model used for creating a new contact.\n\nAttributes:\n    first_name (str): The first name of the contact. This field is required.\n    last_name (str): The last name of the contact. This field is required.\n    email (EmailStr): The email address of the contact. Must be a valid email format.\n    phone (str): The phone number of the contact. This field is required and should follow a valid phone number format.\n    birthday (str): The birthday of the contact in string format. It is recommended to use a standard date format (e.g., YYYY-MM-DD).\n    additional_info (Optional[str]): Additional information about the contact. This field is optional and can be left empty.\n\nNotes:\n    - This model is designed to validate input data when creating a new contact.\n    - Ensure that the `email` field contains a valid email address.\n    - The `birthday` field should ideally be validated further to ensure it represents a valid date."},"ContactResponse":{"properties":{"first_name":{"type":"string","title":"First Name"},"last_name":{"type":"string","title":"Last Name"},"email":{"type":"string","format":"email","title":"Email"},"phone":{"type":"string","title":"Phone"},"birthday":{"type":"string","title":"Birthday"},"additional_info":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Additional Info"},"id":{"type":"integer","title":"Id"}},"type":"object","required":["first_name","last_name","email","phone","birthday","id"],"title":"ContactResponse","description":"Pydantic model for contact responses."},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"Token":{"properties":{"access_token":{"type":"string","title":"Access Token"},"token_type":{"type":"string","title":"Token Type"}},"type":"object","required":["access_token","token_type"],"title":"Token","description":"Token schema defines the structure for authentication tokens.\n\nAttributes:\n    access_token (str): The access token string.\n    token_type (str): The type of the token (e.g., \"bearer\")."},"UserCreate":{"properties":{"email":{"type":"string","format":"email","title":"Email"},"is_active":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Is Active","default":true},"is_verified":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Is Verified","default":false},"role":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Role","default":"user"},"password":{"type":"string","title":"Password"}},"type":"object","required":["email","password"],"title":"UserCreate","description":"UserCreate schema extends UserBase and adds a password field for creating new users.\n\nAttributes:\n    password (str): The password for the user."},"UserResponse":{"properties":{"id":{"type":"integer","title":"Id"},"email":{"type":"string","title":"Email"},"is_verified":{"type":"boolean","title":"Is Verified"}},"type":"object","required":["id","email","is_verified"],"title":"UserResponse"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}